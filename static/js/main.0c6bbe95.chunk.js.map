{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["makeStringDate","date","toUTCString","slice","Clock","state","currentTime","Date","timerId","this","window","setInterval","updateClock","console","info","prevProps","clockName","props","debug","clearInterval","setState","className","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"qMAUMA,EAAiB,SAACC,GAAD,OAAgBA,EAAKC,cAAcC,OAAO,IAAK,IAEzDC,EAAb,4MACEC,MAAQ,CACNC,YAAa,IAAIC,MAFrB,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,cAEL,IAAQN,EAAgB,EAAKD,MAArBC,YAGRO,QAAQC,KAAKd,EAAeM,MAC3B,OAfP,gCAkBE,SAAmBS,GACjB,IAAQC,EAAcP,KAAKQ,MAAnBD,UAEJD,EAAUC,YAAcA,GAE1BH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDA,MAvB9D,kCA2BE,WACEG,cAAcV,KAAKD,WA5BvB,yBA+BE,WACEC,KAAKW,SAAS,CAAEd,YAAa,IAAIC,SAhCrC,oBAmCE,WACE,IAAQD,EAAgBG,KAAKJ,MAArBC,YACAU,EAAcP,KAAKQ,MAAnBD,UAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGrB,EAAeM,YAhD1B,GAA2BgB,a,MCP3B,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWvB,OAAO,GAE3C,MAAM,SAAN,OAAgBqB,GAQX,IAAMG,EAAb,4MACEtB,MAAyB,CACvBuB,UAAU,EACVZ,UAAW,WAHf,EAMER,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKS,SAAS,CAAEJ,UAAWO,QAC1B,MACHM,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKZ,SAAS,CAAEQ,UAAU,OAE5BC,SAASC,iBAAiB,SAAS,SAACC,GAC9BA,GACF,EAAKX,SAAS,CAAEQ,UAAU,SAlBlC,kCAuBE,WACET,cAAcV,KAAKD,WAxBvB,oBA2BE,WACE,MAAgCC,KAAKJ,MAA7BW,EAAR,EAAQA,UAAWY,EAAnB,EAAmBA,SAEnB,OACE,sBAAKP,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOZ,UAAWA,WAjCvC,GAAyBM,aCbzBW,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.0c6bbe95.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  currentTime: Date,\n};\n\nconst makeStringDate = (date: Date) => date.toUTCString().slice(-12, -4);\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    currentTime: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.updateClock();\n\n      const { currentTime } = this.state;\n\n      // eslint-disable-next-line no-console\n      console.info(makeStringDate(currentTime));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { clockName } = this.props;\n\n    if (prevProps.clockName !== clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.timerId);\n  }\n\n  updateClock() {\n    this.setState({ currentTime: new Date() });\n  }\n\n  render() {\n    const { currentTime } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {makeStringDate(currentTime)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n    document.addEventListener('click', (event) => {\n      if (event) {\n        this.setState({ hasClock: true });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}